name: Issue approval Pipeline

on:
  issues:
    types:
      - closed

jobs:
  run_pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Check if the comment is on a closed issue
        env:
          VARS_CONTEXT: ${{ toJson(vars) }}
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"
          comment_body=$(jq -r .comment.body "${{ github.event_path }}")
          echo $comment_body
          if [ "${{ github.event_name }}" == "issues" ] && [ "${{ github.event.action }}" == "closed" ] && [ "${{ github.event.issue.state }}" == "closed" ]; then
            echo "Issue is closed. Checking comment for approval or denial..."
          else
            echo "Not a relevant event. Exiting..."
            exit 0
          fi

      - name: Check comment for approval or denial
        run: |
          comments_url=$(jq -r '.issue.comments_url' "${{ github.event_path }}")
          last_comment_body=$(curl -s "${comments_url}" | jq -r '.[-1].body')
          echo "Last Comment Body: $last_comment_body"
          
      - name: Run Pipeline
        if: "contains(github.event.comment.body, 'approve')"
        run: |
          echo "Pipeline approved. Running the pipeline..."
          # Add your pipeline execution command here

      - name: Fail Pipeline on Deny
        if: "contains(github.event.comment.body, 'deny')"
        run: |
          echo "Pipeline denied. Failing the pipeline."
          exit 1

      - name: No Action Required
        if: "contains(github.event.comment.body, 'approve') == false && contains(github.event.comment.body, 'deny') == false"
        run: |
          echo "No action required for this comment."
