name: Issue approval Test

on:
  issues:
    types:
      - closed
  issue_comment:
    types:
      - created

jobs:
  run_pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Check if the comment is on a closed issue
        run: |
          if [ "${{ github.event_name }}" == "issue_comment" ] && [ "${{ github.event.action }}" == "created" ] && [ "${{ github.event.issue.state }}" == "closed" ]; then
            echo "Issue is closed. Checking comment for approval or denial..."
          else
            echo "Not a relevant event. Exiting..."
            exit 0
          fi

      - name: Check comment for approval or denial
        run: |
          comment_body=$(jq -r .comment.body "${{ github.event_path }}")
          echo "Comment Body: $comment_body"

          if [[ "$comment_body" =~ \bapprove\b ]]; then
            echo "Pipeline approved. Running the pipeline..."
            # Add your pipeline execution command here
          elif [[ "$comment_body" =~ \bdeny\b ]]; then
            echo "Pipeline denied. Failing the pipeline."
            exit 1
          else
            echo "No action required for this comment."
            exit 0
          fi

      - name: Run Pipeline
        if: success()  # Only run if the comment was processed successfully and approval received
        run: |
          # Add additional conditions to check for specific approvals
          # For example, you can use GitHub API to check if the required approvals are met
          # If approvals are met, proceed with your pipeline steps
          # If not, you can exit with an appropriate message or just exit 0 to skip the pipeline

          # Placeholder for checking approvals, replace with actual logic
          if [ your_approval_check_logic ]; then
            echo "Required approvals met. Running the pipeline..."
            # Your pipeline steps go here
          else
            echo "Required approvals not met. Exiting..."
            exit 0
          fi

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
         node-version: 14

      - name: Install dependencies
        run: npm install
